{"version":3,"sources":["components/Users/Users.module.css","components/Login/Login.module.css","components/Dialogs/Dialogs.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Header/Header.module.css","components/Sidebar/Sidebar.module.css","serviceWorker.js","api/API.js","redux/profile-reducer.jsx","redux/dialogs-reducer.jsx","redux/sidebar-reducer.jsx","redux/users-reducer.jsx","redux/auth-reducer.jsx","redux/app-reducer.jsx","redux/redux-store.jsx","components/Profile/ProfileContainer.jsx","components/Dialogs/DialogLink/DialogLink.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Message/NewMessageForm.jsx","components/Dialogs/Dialogs.jsx","components/Login/withRedirect.jsx","components/Dialogs/DialogsContainer.jsx","components/Sidebar/Sidebar.jsx","components/Sidebar/SidebarContainer.jsx","redux/selectors/users-selector.js","components/common/manyPages.jsx","components/common/preloader.svg","components/common/Preloader.jsx","components/common/default_avatar.png","components/Users/User.jsx","components/Users/UsersContainer.jsx","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/profilebackpic.png","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/AddPostForm.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","redux/selectors/profile-selector.js","components/Header/logo.png","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","App.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","instance","axios","baseURL","headers","withCredentials","usersAPI","page","userPerPage","get","then","response","data","userId","post","delete","profileAPI","newStatus","put","status","catch","err","console","log","authAPI","email","password","rememberMe","res","ADD_POST","UPDATE_NEW_POST_TEXT","SET_USER_PROFILE","CLEAR_PROFILE","SET_STATUS","stateInit","UserProfile","aboutMe","contacts","lookingForAJob","lookingForAJobDescription","fullName","photos","small","large","postData","newPostContent","addPost","type","updateNewPostText","text","newText","setStatus","profileReducer","state","action","id","length","likes","userInfo","ADD_MSG","UPDATE_NEW_MSG_TEXT","messagesData","message","owner","dialogsData","name","newMsgContent","dialogsReducer","PicPath","PicName","sidebarReducer","SET_USERS","SET_CURRENT_PAGE","TOGGLE_FOLLOW","TOGGLE_FETCHING","users","currentPage","usersTotalCount","isFetching","setUsers","totalCount","setCurrentPage","pageNum","toggleFetching","usersReducer","map","u","followed","SET_AUTH_INFO","SET_ERROR","login","undefined","isAuth","_error","setError","error","setAuthData","getAuthDataTC","dispatch","resultCode","messages","authReducer","SET_INITIALIZED","initialState","initialized","appReducer","reducers","combineReducers","profilePage","dialogsPage","sidebar","usersPage","authInfo","app","store","createStore","applyMiddleware","thunkMiddleware","DialogLink","props","path","className","s","dialog","active","to","Message","NewMessageForm","addMessage","onMsgChange","newMessageFormik","useFormik","initialValues","messageText","validate","values","errors","onSubmit","resetForm","handleSubmit","onChange","handleChange","value","placeholder","onBlur","e","target","Dialogs","dialogElement","d","key","messagesElement","m","dialogs","dialogsItems","newMessage","updateNewMsgText","mstp","withRedirect","Component","connect","DialogsContainer","compose","Sidebar","navProfileItem","p","friends","nav","item","activeClassName","SidebarContainer","getUsersReselect","createSelector","getIsFetching","getCurrentPage","getUserPerPage","getUsersTotalCount","ManyPages","pageCount","onPageChanged","pages","onClick","activePage","Preloader","alt","src","preloader","showPhoto","photo","default_ava","User","onToggleFollow","user","Users","getUsersTC","isUserFollowed","toggleFollow","this","Math","ceil","i","push","React","items","ProfileStatus","editMode","isMyPage","updateStatus","setState","trim","prevProps","prevState","currentTarget","ProfileInfo","profile","pic","userAva","description","AddPostForm","myOnPostChange","addPostFormik","postText","styles","formControl","Post","likesCount","MyPosts","postElements","postsBlock","MyPostsContainer","Profile","getProfile","getAuth","ProfileContainer","params","requestProfile","getStatus","withRouter","Header","header","logo","logOutTC","HeaderContainer","LoginForm","formik","setSubmitting","loginTC","handleBlur","touched","errorMessage","disabled","isSubmitting","Login","App","initialize","render","UsersContainer","promise","Promise","all","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4a65cd2a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"users\":\"Users_users__3O6S3\",\"user\":\"Users_user__3CmYH\",\"userAvatar\":\"Users_userAvatar__gkShN\",\"pages\":\"Users_pages__fHB7l\",\"activePage\":\"Users_activePage__2a0rP\",\"preloader\":\"Users_preloader__wqCFz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"errorMessage\":\"Login_errorMessage__1FuX0\",\"formControl\":\"Login_formControl__1nd09\",\"error\":\"Login_error__3M5WJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1p9qF\",\"dialogsItems\":\"Dialogs_dialogsItems__j84Gw\",\"active\":\"Dialogs_active__1wkYp\",\"messages\":\"Dialogs_messages__2V-vY\",\"newMessage\":\"Dialogs_newMessage__OO68D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__10Knd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"ProfileInfo_profile__DvBG4\",\"userAva\":\"ProfileInfo_userAva__2xW15\",\"description\":\"ProfileInfo_description__17I7z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2Zw0k\",\"post\":\"Post_post__3yV_R\",\"likes\":\"Post_likes__38xpI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1BBIW\",\"authInfo\":\"Header_authInfo__100KT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Sidebar_nav__16pLJ\",\"item\":\"Sidebar_item__pTawU\",\"active\":\"Sidebar_active__WK5PE\",\"friends\":\"Sidebar_friends__17va7\"};","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n  headers: { \"API-KEY\": \"b9b7da72-358c-41c6-bce8-b75c9ffd97c2\" },\r\n  withCredentials: true,\r\n});\r\n\r\nexport let usersAPI = {\r\n  getUsers(page, userPerPage) {\r\n    return instance\r\n      .get(`users/?page=${page}&count=${userPerPage}`)\r\n      .then((response) => {\r\n        return response.data;\r\n      });\r\n  },\r\n  followUser(userId) {\r\n    return instance.post(`follow/${userId}`).then((response) => {\r\n      return response.data;\r\n    });\r\n  },\r\n  unfollowUser(userId) {\r\n    return instance.delete(`follow/${userId}`).then((response) => {\r\n      return response.data;\r\n    });\r\n  },\r\n};\r\n\r\nexport let profileAPI = {\r\n  getProfile(userId) {\r\n    return instance.get(`profile/${userId}`).then((response) => {\r\n      return response.data;\r\n    });\r\n  },\r\n  getStatus(userId) {\r\n    return instance.get(`profile/status/${userId}`).then((response) => {\r\n      return response.data;\r\n    });\r\n  },\r\n  updateStatus(newStatus) {\r\n    return instance\r\n      .put(\"profile/status\", { status: newStatus })\r\n      .then((response) => {\r\n        return response.data;\r\n      })\r\n      .catch((err) => console.log(err));\r\n  },\r\n};\r\n\r\nexport let authAPI = {\r\n  me() {\r\n    return instance\r\n      .get(\"auth/me\")\r\n      .then((response) => {\r\n        return response.data;\r\n      })\r\n      .catch((err) => console.log(err));\r\n  },\r\n  login(email, password, rememberMe) {\r\n    return instance\r\n      .post(\"auth/login\", { email, password, rememberMe })\r\n      .then((res) => {\r\n        return res.data;\r\n      });\r\n  },\r\n  logout() {\r\n    return instance.delete(\"auth/login\").then((res) => {\r\n      return res.data;\r\n    });\r\n  },\r\n};\r\n","import { profileAPI } from \"../api/API\";\r\n\r\nconst ADD_POST = \"ADD-POST\";\r\nconst UPDATE_NEW_POST_TEXT = \"UPDATE-NEW-POST-TEXT\";\r\nconst SET_USER_PROFILE = \"SET_USER_PROFILE\";\r\nconst CLEAR_PROFILE = \"CLEAR_PROFILE\";\r\nconst SET_STATUS = \"SET_STATUS\";\r\n\r\nlet stateInit = {\r\n  UserProfile: {\r\n    aboutMe: \"\",\r\n    contacts: {},\r\n    lookingForAJob: false,\r\n    lookingForAJobDescription: \"\",\r\n    fullName: \"\",\r\n    userId: 2,\r\n    photos: {\r\n      small: \"\",\r\n      large: \"\",\r\n    },\r\n  },\r\n  postData: [],\r\n  newPostContent: \"123\",\r\n  status: \"\"\r\n};\r\n\r\nconst profileReducer = (state = stateInit, action) => {\r\n  switch (action.type) {\r\n    case ADD_POST:\r\n      return {\r\n        ...state,\r\n        postData: [\r\n          ...state.postData,\r\n          {\r\n            id: state.postData.length + 1,\r\n            post: state.newPostContent,\r\n            likes: 0,\r\n          },\r\n        ],\r\n        newPostContent: \"\",\r\n      };\r\n    case UPDATE_NEW_POST_TEXT:\r\n      console.log(action.newText)\r\n      return { ...state, newPostContent: action.newText };\r\n    case SET_USER_PROFILE:\r\n      return { ...state, UserProfile: action.userInfo };\r\n      case SET_STATUS:\r\n      return { ...state, status: action.status };\r\n    case CLEAR_PROFILE:\r\n      return stateInit;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const clearProfileData = () => ({ type: CLEAR_PROFILE });\r\nexport const addPost = () => ({ type: ADD_POST });\r\nexport const updateNewPostText = (text) => ({\r\n  type: UPDATE_NEW_POST_TEXT,\r\n  newText: text,\r\n});\r\nconst setStatus = (status) => ({ type: SET_STATUS, status });\r\nconst setUserProfile = (userInfo) => ({\r\n  type: SET_USER_PROFILE,\r\n  userInfo,\r\n});\r\n\r\n//thunk action creators\r\nexport const requestProfile = (userId) => (dispatch) => {\r\n  profileAPI.getProfile(userId).then((response) => {\r\n    let data = response;\r\n    dispatch(setUserProfile(data));\r\n  });\r\n};\r\nexport const getStatus = (userId) => (dispatch) => {\r\n  profileAPI.getStatus(userId).then((response) => {\r\n    dispatch(setStatus( response ));\r\n  });\r\n};\r\nexport const updateStatus = (status) => (dispatch) => {\r\n  profileAPI.updateStatus(status).then((response) => {\r\n    if(response.resultCode===0) dispatch(setStatus( status ));\r\n  })\r\n  .catch(err=> console.log(err));\r\n};\r\nexport default profileReducer;\r\n","const ADD_MSG = 'ADD-MSG';\r\nconst UPDATE_NEW_MSG_TEXT = 'UPDATE-NEW-MESSAGE-TEXT';\r\n\r\nlet stateInit = {\r\n    messagesData: [\r\n        { id: 1, message: \"Привет\", owner: 'left' },\r\n        { id: 2, message: \"Как дела\", owner: 'left' },\r\n        { id: 3, message: \"Что делаешь?\", owner: 'left' },\r\n        { id: 4, message: \"Ничего\", owner: 'right' },\r\n        { id: 5, message: 'А ты', owner: 'right' },\r\n    ],\r\n    dialogsData: [\r\n        { id: 1, name: 'Gigaboy' },\r\n        { id: 2, name: 'Platon' },\r\n        { id: 3, name: 'Anton' },\r\n    ],\r\n    newMsgContent: '',\r\n}\r\n\r\nconst dialogsReducer = (state = stateInit, action) => {\r\n\r\n    switch (action.type) {\r\n        case ADD_MSG:\r\n            return {\r\n                ...state,\r\n                messagesData: [...state.messagesData, {\r\n                    message: state.newMsgContent,\r\n                    owner: \"right\",\r\n                    id: state.messagesData.length + 1\r\n                }],\r\n                newMsgContent: '',\r\n            }\r\n        case UPDATE_NEW_MSG_TEXT: return { ...state, newMsgContent: action.newText }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport const addMessage = () => ({ type: ADD_MSG });\r\nexport const updateNewMsgText = (text) =>\r\n    ({ type: UPDATE_NEW_MSG_TEXT, newText: text });\r\n\r\nexport default dialogsReducer;\r\n","let stateInit = [\r\n    {id: 1, name: \"Platon Boyko\", PicPath: '1.jpg'},\r\n    {id: 2, name: \"Another One\", PicName: '2.jpg'},\r\n    {id: 3, name: \"Tot Samiy\", PicName: '3.jpg'},\r\n]\r\nconst sidebarReducer = (state = stateInit, action) => {\r\n    return state;\r\n};\r\n\r\nexport default sidebarReducer;","import { usersAPI } from \"../api/API\";\r\n\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst TOGGLE_FOLLOW = 'TOGGLE_FOLLOW';\r\nconst TOGGLE_FETCHING = 'TOGGLE_FETCHING';\r\n\r\nlet stateInit = {\r\n  users: [],\r\n  currentPage: 1,\r\n  usersTotalCount: 0,\r\n  userPerPage: 30,\r\n  isFetching: true,\r\n}\r\n\r\nconst usersReducer = (state = stateInit, action) => {\r\n  switch (action.type) {\r\n    case SET_USERS: return ({ ...state, users: action.users, usersTotalCount: action.totalCount });\r\n    case SET_CURRENT_PAGE: return ({ ...state, currentPage: action.page });\r\n    case TOGGLE_FOLLOW: return {\r\n      ...state,\r\n      users: state.users.map(u => {\r\n        if (u.id === action.id) {\r\n          u.followed = !u.followed;\r\n          return u;\r\n        } else return u;\r\n      })\r\n    }\r\n    case TOGGLE_FETCHING: return { ...state, isFetching: action.isFetching }\r\n    default: return state;\r\n  }\r\n}\r\n\r\nexport const setUsers = (users, totalCount) => ({ type: SET_USERS, users: users, totalCount: totalCount });\r\nexport const setCurrentPage = (pageNum) => ({ type: SET_CURRENT_PAGE, page: pageNum });\r\nexport const toggleFollow = (id) => ({ type: TOGGLE_FOLLOW, id });\r\nexport const toggleFetching = (isFetching) => ({ type: TOGGLE_FETCHING, isFetching });\r\n//thunk creators\r\nexport const getUsersTC = (page, userPerPage) => (dispatch) => {\r\n  dispatch(setUsers([]))\r\n  dispatch(toggleFetching(true));\r\n  dispatch(setCurrentPage(page));\r\n  usersAPI.getUsers(page, userPerPage)\r\n    .then(data => {\r\n      dispatch(setUsers(data.items, data.totalCount));\r\n      dispatch(toggleFetching(false));\r\n    })\r\n}\r\nexport default usersReducer;","import { authAPI } from \"../api/API\";\r\n\r\nconst SET_AUTH_INFO = \"SET_AUTH_INFO\";\r\nconst SET_ERROR = \"SET_ERROR\";\r\n\r\nlet stateInit = {\r\n  userId: 14110,\r\n  login: undefined,\r\n  email: undefined,\r\n  isAuth: false,\r\n  _error: \"\",\r\n};\r\n\r\nconst authReducer = (state = stateInit, action) => {\r\n  switch (action.type) {\r\n    case SET_AUTH_INFO:\r\n      return {\r\n        ...state,\r\n        ...action.data,\r\n        isAuth: action.data.isAuth,\r\n      };\r\n    case SET_ERROR:\r\n      return {\r\n        ...state,\r\n        _error: action.error,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport const setError = (error) => ({ type: SET_ERROR, error });\r\nexport const setAuthData = (userId, login, email, isAuth) => ({\r\n  type: SET_AUTH_INFO,\r\n  data: { userId, login, email, isAuth },\r\n});\r\n\r\nexport const loginTC =\r\n  (email, password, rememberMe = false) =>\r\n  (dispatch) => {\r\n    authAPI\r\n      .login(email, password, rememberMe)\r\n      .then((response) => {\r\n        debugger;\r\n        if (response.resultCode === 0) dispatch(getAuthDataTC());\r\n        else if(response.resultCode === 1){\r\n          dispatch(setError(response.messages[0]));\r\n        } else if(response.resultCode === 10) \r\n        console.log(\"надо капчу добавить\");\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\nexport const logOutTC = () => (dispatch) => {\r\n  dispatch(setAuthData(null, null, null, false));\r\n  authAPI.logout().then((res) => {\r\n    //if(res.resultCode===0)\r\n  });\r\n};\r\nexport const getAuthDataTC = () => (dispatch) => {\r\n  authAPI.me().then((res) => {\r\n    let response = res;\r\n    if (response.resultCode === 0) {\r\n      let { id, login, email } = response.data;\r\n      dispatch(setAuthData(id, login, email, true));\r\n    } else console.log(response.messages);\r\n  });\r\n  return \"OK\";\r\n};\r\n\r\nexport default authReducer;\r\n","import { getAuthDataTC } from \"./auth-reducer\";\r\n\r\nconst SET_INITIALIZED = \"SET_INITIALIZED\";\r\n\r\nlet initialState = {\r\n  initialized: false,\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_INITIALIZED:\r\n      return {\r\n        ...state,\r\n        initialized: true,\r\n      };\r\n    default:\r\n      return {\r\n        ...state,\r\n      };\r\n  }\r\n};\r\n\r\nconst setInitialized = () => ({ type: SET_INITIALIZED });\r\n\r\nexport const initialize = () => (dispatch) => {\r\n  let promise = dispatch(getAuthDataTC());\r\n  Promise.all([promise]).then(() => {\r\n    dispatch(setInitialized());\r\n  });\r\n};\r\n\r\nexport default appReducer;\r\n","import { applyMiddleware, combineReducers, createStore } from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport appReducer from \"./app-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    authInfo: authReducer,\r\n    app: appReducer,\r\n});\r\n\r\nlet store = createStore(reducers,applyMiddleware(thunkMiddleware));\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import React from \"react\";\r\nimport {\r\n  addPost,\r\n  updateNewPostText,\r\n  clearProfileData,\r\n  requestProfile,\r\n  getStatus,\r\n  updateStatus\r\n} from \"../../redux/profile-reducer\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport Profile from \"./Profile\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { getAuth, getProfile } from \"../../redux/selectors/profile-selector\";\r\n\r\nlet userId; \r\n\r\nclass ProfileContainer extends React.Component {\r\n  state = { status: \"\", isMyPage : false };\r\n  componentDidMount() {\r\n    if(this.props.authInfo.userId===this.props.profile.UserProfile.userId) this.setState({isMyPage: true})\r\n    userId = this.props.match.params.userId;\r\n    this.props.requestProfile(userId);\r\n    this.props.getStatus(userId);\r\n  }\r\n  componentWillUnmount() {\r\n    clearProfileData();\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Profile \r\n        profile={this.props.profile.UserProfile} \r\n        status={this.props.profile.status}\r\n        isMyPage={this.state.isMyPage}\r\n        isAuth={this.props.authInfo.isAuth}\r\n        updateStatus={this.props.updateStatus}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({ profile: getProfile(state), authInfo: getAuth(state) });\r\n\r\nexport default compose(\r\n  withRouter,\r\n  connect(mapStateToProps, { addPost, updateNewPostText, requestProfile, getStatus, updateStatus })\r\n)(ProfileContainer);\r\n","import React from 'react';\r\nimport s from '../Dialogs.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst DialogLink = (props) => {\r\n    let path = '/dialogs/' + props.id;\r\n    return (\r\n        <div className={s.dialog + ' ' + s.active}>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogLink","import React from 'react';\r\n/*import s from '../Dialogs.module.css'*/\r\n\r\nconst Message = (props) => {\r\n\r\n    return (\r\n        <div className={props.owner}> {props.message} </div>\r\n    )\r\n};\r\n\r\nexport default Message","import { useFormik } from \"formik\";\r\nimport React from \"react\";\r\n\r\nconst NewMessageForm = ({ addMessage, onMsgChange }) => {\r\n  const validate = (values) => {\r\n    const errors = {};\r\n    if(!values.messageText) errors.messageText = \"Message is required\"\r\n    else if (values.messageText.length>150) errors.messageText = \"Max length is reached\"\r\n    return errors;\r\n  }\r\n  const newMessageFormik = useFormik({\r\n    initialValues: {\r\n      messageText: \"\",\r\n    },\r\n    validate,\r\n    onSubmit: (values, {resetForm}) => {\r\n      addMessage();\r\n      resetForm( {values: \"\"})\r\n    },\r\n  });\r\n  return (\r\n    <form onSubmit={newMessageFormik.handleSubmit}>\r\n      <textarea\r\n        name={\"messageText\"}\r\n        onChange={newMessageFormik.handleChange}\r\n        value={newMessageFormik.values.messageText}\r\n        placeholder={\"New message\"}\r\n        onBlur={(e) => onMsgChange(e.target.value)}\r\n        ></textarea>\r\n      <div>\r\n        <button type={\"submit\"}>Send message</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\nexport default NewMessageForm;\r\n","import React from \"react\";\r\nimport s from \"./Dialogs.module.css\";\r\nimport DialogLink from \"./DialogLink/DialogLink\";\r\nimport Message from \"./Message/Message\";\r\nimport \"./Dialogs.css\";\r\nimport NewMessageForm from \"./Message/NewMessageForm\";\r\n\r\nconst Dialogs = (props) => {\r\n  let dialogElement = props.state.dialogsData.map((d) => (\r\n    <DialogLink id={d.id} key={d.id} name={d.name} />\r\n  ));\r\n\r\n  let messagesElement = props.state.messagesData.map((m) => (\r\n    <Message owner={m.owner} key={m.id} message={m.message} />\r\n  ));\r\n\r\n  let addMessage = () => {\r\n    props.addMessage();\r\n  };\r\n  let onMsgChange = (text) => {\r\n    props.updateNewMsgText(text);\r\n  };\r\n\r\n  return (\r\n    <div className={s.dialogs}>\r\n      <div className={s.dialogsItems}>{dialogElement}</div>\r\n      <div className={s.messages}>\r\n        {messagesElement}\r\n        <div className={s.newMessage}>\r\n          <NewMessageForm addMessage={addMessage} onMsgChange={onMsgChange} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dialogs;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router\";\r\n\r\nlet mstp = (state)=>({isAuth: state.authInfo.isAuth});\r\n\r\nconst withRedirect = (Component) => {\r\n  const RedirectComponent = (props) => {\r\n    if (!props.isAuth) return <Redirect to=\"/login\" />;\r\n    return <Component {...props} />;\r\n  };\r\n  return connect(mstp)(RedirectComponent);\r\n};\r\n\r\nexport default withRedirect;\r\n","import { addMessage, updateNewMsgText } from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport { connect } from \"react-redux\";\r\nimport withRedirect from \"../Login/withRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => ({ state: state.dialogsPage });\r\n\r\nconst DialogsContainer = compose(\r\n    withRedirect, connect(mapStateToProps, { updateNewMsgText, addMessage })\r\n)(Dialogs)\r\n\r\nexport default DialogsContainer;","import React from 'react';\r\nimport s from './Sidebar.module.css';\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\n\r\nconst Sidebar = (props) => {\r\n    let navProfileItem = props.sidebar.map(p =>\r\n        <div className='123' key={p.id}>\r\n            <NavLink\r\n                to='/'\r\n                className={s.friends}>\r\n                {p.name}\r\n            </NavLink>\r\n        </div>)\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink to={props.authInfo.isAuth?`/profile/${props.authInfo.userId}`:\"/login\"} activeClassName={s.active}>Profile </NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/dialogs/\" activeClassName={s.active}>Messages </NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/news\" activeClassName={s.active}>News </NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to='/audio' activeClassName={s.active}>Audio </NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to='/users' activeClassName={s.active}>Users </NavLink>\r\n            </div>\r\n            <div>\r\n                <h3>My friends</h3>\r\n                <div className={s.friends}>\r\n                    {navProfileItem}\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Sidebar;","import {connect} from \"react-redux\";\r\nimport Sidebar from \"./Sidebar\";\r\n\r\nconst mapStateToProps = (state) => ({sidebar: state.sidebar, authInfo: state.authInfo});\r\n\r\nconst SidebarContainer = connect(mapStateToProps)(Sidebar);\r\n\r\nexport default SidebarContainer;","import { createSelector } from \"reselect\";\r\n\r\nconst getUsersSelector = (state) => {\r\n    return state.usersPage.users;\r\n}\r\n\r\nexport const getUsersReselect = createSelector(getUsersSelector, (users) => {\r\n    return users;\r\n});\r\n\r\nexport const getIsFetching= (state) => {\r\n    return state.usersPage.isFetching;\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage;\r\n}\r\nexport const getUserPerPage = (state) => {\r\n    return state.usersPage.userPerPage;\r\n}\r\nexport const getUsersTotalCount = (state) => {\r\n    return state.usersPage.usersTotalCount;\r\n}","import React from 'react';\r\nimport s from '../Users/Users.module.css'\r\n\r\n\r\nconst ManyPages = (currentPage, pageCount, onPageChanged, pages) => {\r\n  if (currentPage > 9 && currentPage < pageCount) return <div className={s.pages}>\r\n    <span onClick={() => onPageChanged(1)}>1</span>\r\n    <span>...</span>\r\n    <span onClick={() => onPageChanged(currentPage - 1)}>{currentPage - 1} </span>\r\n    <span onClick={() => onPageChanged(currentPage)} className={s.activePage}>{currentPage} </span>\r\n    <span onClick={() => onPageChanged(currentPage + 1)}>{currentPage + 1}</span>\r\n    <span>...</span>\r\n    <span onClick={() => onPageChanged(pageCount)}>{pageCount}</span>\r\n  </div>\r\n  if (currentPage < 10) return <div className={s.pages}>\r\n    {\r\n      pages.map(p => {\r\n        return p < 11 ? <span\r\n          key={p}\r\n          onClick={() => onPageChanged(p)}\r\n          className={currentPage === p ? s.activePage : null}>\r\n          {p + ' '}\r\n        </span> : null\r\n      }\r\n      )}\r\n  </div>\r\n  if (currentPage === pageCount) return <div className={s.pages}>\r\n    <span onClick={() => onPageChanged(1)}>1</span>\r\n    <span>...</span>\r\n    <span onClick={() => onPageChanged(currentPage - 1)}>{currentPage - 1} </span>\r\n    <span onClick={() => onPageChanged(currentPage)} className={s.activePage}>{currentPage} </span>\r\n  </div>\r\n}\r\n\r\n\r\nexport default ManyPages;","export default __webpack_public_path__ + \"static/media/preloader.d97d268b.svg\";","import React from 'react';\r\nimport preloader from './preloader.svg'\r\n\r\nconst Preloader = () => {\r\n  return <img alt=\"preloader\"\r\n    src={preloader}\r\n  />\r\n}\r\nexport default Preloader;","export default __webpack_public_path__ + \"static/media/default_avatar.cc82533c.png\";","import React from 'react';\r\nimport s from './Users.module.css';\r\nimport default_ava from '../common/default_avatar.png'\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst showPhoto = (photo) => {\r\n  return photo ? photo : default_ava;\r\n}\r\n\r\nconst User = ({ userInfo, onToggleFollow, photo, ...props }) => {\r\n  return <>\r\n    <span className={s.user}>\r\n      <NavLink to={'/profile/' + userInfo.id}>\r\n        <img alt=\"user avatar\" src={showPhoto(userInfo.photos.small)} />\r\n      </NavLink>\r\n      <p>{userInfo.name}</p>\r\n      <button onClick={() => onToggleFollow(userInfo.id, userInfo.followed)}>{userInfo.followed ? \"Unfollow\" : \"Follow\"}</button>\r\n    </span>\r\n  </>\r\n}\r\n\r\nexport default User;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { usersAPI } from '../../api/API';\r\nimport { getUsersReselect,getIsFetching,getCurrentPage,getUserPerPage,getUsersTotalCount } from '../../redux/selectors/users-selector';\r\nimport { getUsersTC, setCurrentPage, setUsers, toggleFetching, toggleFollow } from '../../redux/users-reducer';\r\nimport ManyPages from '../common/manyPages';\r\nimport Preloader from '../common/Preloader.jsx';\r\nimport User from './User';\r\nimport s from './Users.module.css';\r\n\r\n\r\nclass Users extends React.Component {\r\n  componentDidMount() {\r\n    this.props.getUsersTC(this.props.state.currentPage, this.props.state.userPerPage);\r\n  }\r\n  onPageChanged = (page) => {\r\n    this.props.getUsersTC(page, this.props.state.userPerPage);\r\n  }\r\n  onToggleFollow = (userId, isUserFollowed) => {\r\n    if (!isUserFollowed) {\r\n      usersAPI.followUser(userId)\r\n        .then(data => {\r\n          data.resultCode === 0 ? this.props.toggleFollow(userId) : console.log(data.messages);\r\n        })\r\n    } else {\r\n      usersAPI.unfollowUser(userId)\r\n        .then(data => {\r\n          data.resultCode === 0 ? this.props.toggleFollow(userId) : console.log(data.messages);\r\n        })\r\n\r\n    }\r\n  }\r\n  render() {\r\n    let pages = [];\r\n    let pageCount = Math.ceil(this.props.state.usersTotalCount / this.props.state.userPerPage);\r\n    for (let i = 1; i <= pageCount; i++) { pages.push(i); }\r\n    return <>\r\n      <div className={s.preloader}>{this.props.state.isFetching ? <Preloader /> : null}</div>\r\n      <div className={s.users}>\r\n        {this.props.state.users.map(u => {\r\n          return <User\r\n            key={u.id}\r\n            userInfo={u}\r\n            onToggleFollow={this.onToggleFollow}\r\n          />\r\n        })}\r\n      </div>\r\n      <div >\r\n        {\r\n          ManyPages(this.props.state.currentPage, pageCount, this.onPageChanged, pages)\r\n        }\r\n      </div>\r\n    </>\r\n  }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => ({ \r\n  state: state.usersPage, \r\n  isFetching: getIsFetching(state),\r\n  users: getUsersReselect(state),\r\n  usersTotalCount: getUsersTotalCount(state),\r\n  currentPage: getCurrentPage(state), \r\n  userPerPage: getUserPerPage(state) \r\n})\r\nexport default connect(mapStateToProps, { setUsers, setCurrentPage, toggleFollow, toggleFetching, getUsersTC })(Users);\r\n","import React from \"react\";\r\n\r\nclass ProfileStatus extends React.Component {\r\n  state = {\r\n    editMode: false,\r\n    isMyPage: this.props.isMyPage,\r\n    status: \"Что нового?\",\r\n  };\r\n  componentDidMount() {\r\n    if (this.props.status && this.props.status.trim()!==\"\") this.setState({ status: this.props.status });\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevProps.status !== this.props.status) {\r\n      this.setState({ status: this.props.status });\r\n    }\r\n  }\r\n  updateStatus = () => {\r\n    this.setState({ editMode: false });\r\n    this.props.updateStatus(this.state.status);\r\n  };\r\n  render() {\r\n    if (!this.props.isMyPage) return <span>{this.props.status}</span>;\r\n    return (\r\n      <>\r\n        {!this.state.editMode ? (\r\n          <div>\r\n            <span onClick={(e) => this.setState({ editMode: true })}>\r\n              {this.state.status}\r\n            </span>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <input\r\n              value={this.state.status}\r\n              onChange={(e) => this.setState({ status: e.currentTarget.value })}\r\n            />\r\n            <button onClick={() => this.updateStatus()}>Изменить статус</button>\r\n          </div>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProfileStatus;\r\n","export default __webpack_public_path__ + \"static/media/profilebackpic.1e3760b6.png\";","import React from 'react';\r\nimport ProfileStatus from './ProfileStatus';\r\nimport pic from \"../profilebackpic.png\";\r\nimport s from './ProfileInfo.module.css';\r\nimport default_ava from '../../common/default_avatar.png';\r\n\r\nconst showPhoto = (photo) => {\r\n    return photo ? photo : default_ava;\r\n}\r\n\r\nconst ProfileInfo = ({ profile, status, isMyPage,updateStatus }) => {\r\n    return (<>\r\n        <img alt=\"background avatar\" src={pic} />\r\n        <div className={s.profile}>\r\n            <img className={s.userAva} alt=\"profile avatar\" src={showPhoto(profile.photos.large)} />\r\n            <div className={s.description}>\r\n                <p>{profile.fullName}</p>\r\n                <p>{profile.aboutMe}</p>\r\n                <p>{profile.lookingForAJob ? 'Ищет работу с: ' + profile.lookingForAJobDescription : 'Не ищет работу'}</p>\r\n            </div>\r\n            <ProfileStatus status={status} isMyPage={isMyPage} updateStatus={updateStatus}/>\r\n        </div>\r\n    </>\r\n    )\r\n}\r\n\r\n\r\nexport default ProfileInfo;","import { useFormik } from \"formik\";\r\nimport styles from \"./MyPosts.module.css\"\r\nimport React from \"react\";\r\n\r\nconst AddPostForm = ({ myOnPostChange, addPost }) => {\r\n\r\n  const validate = (values) => {\r\n    const errors = {};\r\n    if(!values.postText) errors.postText = \"Text is required\"\r\n    else if (values.postText.length>20) errors.postText = \"Max length is reached\"\r\n    return errors;\r\n  }\r\n  const addPostFormik = useFormik({\r\n    initialValues: {\r\n      postText: \"\",\r\n    },\r\n    validate,\r\n    onSubmit: () => {\r\n      addPost();\r\n    },\r\n  });\r\n  return (\r\n    <form onSubmit={addPostFormik.handleSubmit}>\r\n      <input\r\n      className={styles.formControl} \r\n        onBlur={(e) => {\r\n          myOnPostChange(e.target.value);\r\n        }}\r\n        onChange={addPostFormik.handleChange}\r\n        value={addPostFormik.values.postText}\r\n        name={\"postText\"}\r\n        type={\"text\"}\r\n      />\r\n      <button type=\"submit\">Add post</button>\r\n    </form>\r\n  );\r\n};\r\nexport default AddPostForm;\r\n","import React from 'react';\r\nimport s from './Post.module.css'\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <div className={s.post}>\r\n                <img alt=\"Avatar\" src='https://sun9-62.userapi.com/c854220/v854220140/c9519/wTbO9fTVI_k.jpg' />\r\n                {props.post}\r\n            </div>\r\n            <span className={s.likes}>\r\n                {props.likesCount} Likes\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React from \"react\";\r\nimport AddPostForm from \"./AddPostForm\";\r\nimport s from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\n\r\nconst MyPosts = (props) => {\r\n  let postElements = props.postData.map((p) => (\r\n    <Post key={p.id} post={p.post} likesCount={p.likes} />\r\n  ));\r\n\r\n  return (\r\n    <div className={s.postsBlock}>\r\n      <div className={s.MyPosts}>\r\n        <h3>Posts: </h3>{\" \"}\r\n        {props.isAuth?<AddPostForm\r\n          myOnPostChange={props.updateNewPostText}\r\n          addPost={props.addPost}\r\n        />:\"\"}\r\n        {postElements}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyPosts;\r\n","import { addPost, updateNewPostText } from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        postData: state.profilePage.postData\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: () => {\r\n            dispatch(addPost());\r\n        },\r\n        updateNewPostText: (action) => {\r\n            dispatch(updateNewPostText(action));\r\n        }\r\n    }\r\n}\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\n\r\nconst Profile = (props) => {\r\n  return (\r\n    <div>\r\n      <ProfileInfo \r\n      profile={props.profile} \r\n      status={props.status} \r\n      isMyPage={props.isMyPage}\r\n      updateStatus={props.updateStatus}\r\n      />\r\n      <MyPostsContainer isAuth={props.isAuth}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Profile;\r\n\r\n","export const getProfile = (state) => {\r\n    return state.profilePage;\r\n}\r\n\r\nexport const getAuth = (state) => {\r\n    return state.authInfo;\r\n}","export default __webpack_public_path__ + \"static/media/logo.9f832255.png\";","import React from 'react';\r\nimport { Link, NavLink } from 'react-router-dom';\r\nimport s from './Header.module.css'\r\nimport logo from \"./logo.png\"\r\n\r\nconst Header = (props) => {\r\n  return (\r\n    <header className={s.header}>\r\n      <img alt=\"logo\" src={logo}></img>\r\n      <div className={s.authInfo}>\r\n        {props.authInfo.email?props.authInfo.email+\" \":\"\"} \r\n      <span>\r\n      {props.authInfo.isAuth?<Link to={\"/login\"} onClick={()=> props.logOutTC() }>Logout</Link>:<NavLink to={\"/login\"}>Login</NavLink>}\r\n      </span>\r\n      </div>\r\n    </header>)\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Header from './Header';\r\nimport {logOutTC } from '../../redux/auth-reducer';\r\n\r\nclass HeaderContainer extends React.Component {\r\n  render() {\r\n    return (\r\n      <Header authInfo={this.props.authInfo} logOutTC={this.props.logOutTC} />\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({ authInfo: state.authInfo })\r\nexport default connect(mapStateToProps,  {logOutTC} )(HeaderContainer);","import { useFormik } from \"formik\";\r\nimport React from \"react\";\r\nimport { loginTC } from \"../../redux/auth-reducer\";\r\nimport styles from \"./Login.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nlet LoginForm = (props) => {\r\n  const validate = (values) => {\r\n    const errors = {};\r\n    if (!values.login) errors.login = \"Login is required\";\r\n    else if (values.login.length > 30) errors.login = \"Max length reached\";\r\n    if (!values.password) errors.password = \"Password is required\";\r\n    else if (values.password.length > 30)\r\n      errors.password = \"Max length reached\";\r\n    return errors;\r\n  };\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      login: \"\",\r\n      password: \"\",\r\n      rememberMe: false,\r\n    },\r\n    validate,\r\n    onBlur:()=> {formik.setSubmitting(false)},\r\n    onSubmit: (values) => {\r\n      formik.setSubmitting(true);\r\n      let { login, password, rememberMe } = values;\r\n      props.loginTC(login, password, rememberMe);\r\n    },\r\n  });\r\n  console.log(props.authInfo)\r\n  if (props.authInfo.isAuth)\r\n    return <Redirect to={\"/profile/\" + props.authInfo.userId} />;\r\n  else \r\n  return (\r\n    <form onSubmit={formik.handleSubmit}>\r\n      <div>\r\n        <input\r\n          className={\r\n            !formik.errors.login\r\n              ? styles.formControl\r\n              : styles.formControl + \" \" + styles.error\r\n          }\r\n          name={\"login\"}\r\n          onChange={(e)=> {formik.setSubmitting(false); formik.handleChange(e);}}\r\n          onBlur={formik.handleBlur}\r\n          value={formik.values.login}\r\n          placeholder={\"Login\"}\r\n          type=\"text\"\r\n        />\r\n        {formik.touched.login && formik.errors.login && (\r\n          <span className={styles.errorMessage}> {formik.errors.login}</span>\r\n        )}\r\n      </div>\r\n      <div>\r\n        <input\r\n          className={\r\n            !formik.errors.password\r\n              ? styles.formControl\r\n              : styles.formControl + \" \" + styles.error\r\n          }\r\n          name={\"password\"}\r\n          onChange={(e)=> {formik.setSubmitting(false); formik.handleChange(e);}}\r\n          onBlur={formik.handleBlur}\r\n          value={formik.values.password}\r\n          placeholder={\"Password\"}\r\n          type=\"password\"\r\n        />\r\n        {formik.touched.password && formik.errors.password && (\r\n          <span className={styles.errorMessage}> {formik.errors.password}</span>\r\n        )}\r\n      </div>\r\n      <div>\r\n        remember me{\" \"}\r\n        <input\r\n          name={\"rememberMe\"}\r\n          onChange={formik.handleChange}\r\n          value={formik.values.rememberMe}\r\n          type={\"checkbox\"}\r\n        />\r\n      </div>\r\n      <div>\r\n        <button type={\"submit\"} disabled={formik.isSubmitting}>Login</button>\r\n      </div>\r\n    {props.authInfo._error&&<span>{props.authInfo._error}</span>}\r\n    </form>\r\n  );\r\n};\r\nLoginForm = connect((state) => ({ authInfo: state.authInfo }), { loginTC })(\r\n  LoginForm\r\n);\r\n\r\nconst Login = () => {\r\n  return <LoginForm />;\r\n};\r\nexport default Login;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport { Route, withRouter } from \"react-router-dom\";\r\nimport DialogsContainer from \"./components/Dialogs/DialogsContainer\";\r\nimport SidebarContainer from \"./components/Sidebar/SidebarContainer\";\r\nimport UsersContainer from \"./components/Users/UsersContainer\";\r\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport Login from \"./components/Login/Login\";\r\nimport { compose } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport {initialize} from \"./redux/app-reducer\"\r\nimport Preloader from \"./components/common/Preloader\";\r\n\r\nclass App extends React.Component {\r\n  componentDidMount() {\r\n    this.props.initialize();\r\n  }\r\n  render() {\r\n    if(!this.props.initialized) return <Preloader/>\r\n    return (\r\n      <div className=\"add-wrapper\">\r\n        <HeaderContainer />\r\n        <SidebarContainer />\r\n        <div className={\"add-wrapper-content\"}>\r\n          <Route path=\"/dialogs\" render={() => <DialogsContainer />} />\r\n          <Route path=\"/profile/:userId\" render={() => <ProfileContainer />} />\r\n          <Route path=\"/news\" render={() => <div>News</div>} />\r\n          <Route path=\"/audio\" render={() => <div>Music</div>} />\r\n          <Route path=\"/users\" render={() => <UsersContainer />} />\r\n          <Route path=\"/login\" render={() => <Login />} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  withRouter,\r\n   connect((state)=> ({initialized: state.app.initialized}), {initialize})) \r\n   (App);\r\n","import React from 'react';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport store from \"./redux/redux-store\";\r\nimport ReactDOM from \"react-dom\";\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport App from \"./App\";\r\nimport {Provider} from \"react-redux\";\r\n\r\nReactDOM.render(\r\n    <BrowserRouter>\r\n        <Provider store={store}>\r\n            <App/>\r\n        </Provider>\r\n    </BrowserRouter>,\r\n    document.getElementById('root')\r\n);\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}
